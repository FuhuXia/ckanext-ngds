/* Copyright (c) 2014, Siemens Corporate Technology and Arizona Geological Survey *//* Copyright (c) 2014, Siemens Corporate Technology and Arizona Geological Survey *//* Copyright (c) 2014, Siemens Corporate Technology and Arizona Geological Survey *//**
 * @author - Vivek
 * This function validates HTML form fields dynamically and is purely based on information that is put into the HTML itself
 * in 'data-' custom tags. The following attributes on an input element are needed -
 *
 * data-validate - A marker attribute with no value. It indicates to the validator function that it should be validated.
 * data-validate-fingerprint - An attribute that indicates to the function what it means for this field to be valid, as well as invalid.
 *                              It's value looks something like this - "2^^^100^^^[a-zA-Z1-9\-]^^^2". Three ^^^ characters are used as separators between values.
 *
 *                              The first value indicates the minimum length that the value of this input can be in order to be valid.
 *
 *                              The second value indicates the maximum length that the value of this input can be in order to be valid.
 *
 *                              The third value indicates the characters that are allowed in this input's value for it to be valid (More importantly, the characters that
 *                              render it invalid, which is inferred by the validator function and lets the programmer focus on what the valid inputs are.)
 *
 *                             The fourth value indicates after how many characters are entered into the input field, to begin validating the input. This reduces the signal/noise ratio
 *                             for the user by not telling them that an input is invalid before they have even attempted to enter a fully considered input.
 *
 * data-validate-regex-msg - Let the user know that they have entered invalid characters using a message typed into this attribute's value.
 * data-validate-minlen-msg - Let the user know that they have entered too few characters using a message typed into this attribute's value.
 * data-validate-maxlen-msg - Let the user know that they have entered too many characters using a message typed into this attribute's value.
 *
 *
 */ngds.validator=function(){var e=function(){var e=this;this.setup_fields=function(){var e=$("[data-validate]").filter("[data-validate-fingerprint]");$(e).each(function(){var e=$(this).attr("data-validate-fingerprint").split("^^^"),t=0,n=null;if(typeof e[2]!="undefined"){var r=e[2].indexOf("["),i;if(r===-1)i=function(t){n=new RegExp(e[2]);for(var r=0;r<t.length;r++)if(t[r].match(n)===null)return!1;return!0};else{var s=e[2].split("");s.splice(r+1,0,"^");n=new RegExp(s.join(""));i=function(e){return n.exec(e)!==null?!1:!0}}}var o=Number(e[1]),u=Number(e[0]);typeof e[3]!="undefined"&&(t=Number(e[3]));var a=1,f=this,l=function(){a+=1;var e=$(f).val();typeof $(f).attr("data-validate-ext")!="undefined"&&ngds.validator.vmap[$(f).attr("data-validate-ext")]();if(a>=t){$(f).parents().children().filter(".error-block").remove();i(e)===!1&&$(f).after($("<div/>",{"class":"error-block",text:$(f).attr("data-validate-regex-msg")}));o!==-1&&e.length>o&&$(f).after($("<div/>",{"class":"error-block",text:$(f).attr("data-validate-maxlen-msg")}));u!==-1&&e.length<u&&$(f).after($("<div/>",{"class":"error-block",text:$(f).attr("data-validate-minlen-msg")}))}},c=ngds.validator.vmap||(ngds.validator.vmap={});c[this.name]=l;$(this).on("input",l)})};ngds.subscribe("Forms.reinitialize",function(){e.setup_fields()});this.initialize=function(){e.setup_fields()};return{initialize:this.initialize}},t=null,n=function(){if(t===null){t=new e;t.initialize()}return t};return{initialize:n}}();$(document).ready(function(){ngds.validator.initialize()});